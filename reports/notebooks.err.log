Traceback (most recent call last):
  File "/home/brittny/.local/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/brittny/.local/lib/python3.10/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/brittny/.local/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/brittny/.local/lib/python3.10/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/home/brittny/.local/lib/python3.10/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/brittny/.local/lib/python3.10/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import matplotlib.pyplot as plt
import pandas as pd
from pandas.plotting import radviz
df = pd.read_csv('cleaned.csv')
df = df.drop('id', axis=1)
df = df.drop('Other Identification', axis=1)
df = df.drop('Other Interest', axis=1)
plt.figure()
radviz(df, "geo", legend=None)
------------------

----- stderr -----
/home/brittny/.local/lib/python3.10/site-packages/pandas/plotting/_matplotlib/misc.py:178: RuntimeWarning: invalid value encountered in divide
  y = (s * row_).sum(axis=0) / row.sum()
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
Cell [0;32mIn[1], line 9[0m
[1;32m      7[0m df [38;5;241m=[39m df[38;5;241m.[39mdrop([38;5;124m'[39m[38;5;124mOther Interest[39m[38;5;124m'[39m, axis[38;5;241m=[39m[38;5;241m1[39m)
[1;32m      8[0m plt[38;5;241m.[39mfigure()
[0;32m----> 9[0m [43mradviz[49m[43m([49m[43mdf[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mgeo[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43mlegend[49m[38;5;241;43m=[39;49m[38;5;28;43;01mNone[39;49;00m[43m)[49m

File [0;32m~/.local/lib/python3.10/site-packages/pandas/plotting/_misc.py:312[0m, in [0;36mradviz[0;34m(frame, class_column, ax, color, colormap, **kwds)[0m
[1;32m    243[0m [38;5;250m[39m[38;5;124;03m"""[39;00m
[1;32m    244[0m [38;5;124;03mPlot a multidimensional dataset in 2D.[39;00m
[1;32m    245[0m 
[0;32m   (...)[0m
[1;32m    309[0m [38;5;124;03m    >>> pd.plotting.radviz(df, 'Category')  # doctest: +SKIP[39;00m
[1;32m    310[0m [38;5;124;03m"""[39;00m
[1;32m    311[0m plot_backend [38;5;241m=[39m _get_plot_backend([38;5;124m"[39m[38;5;124mmatplotlib[39m[38;5;124m"[39m)
[0;32m--> 312[0m [38;5;28;01mreturn[39;00m [43mplot_backend[49m[38;5;241;43m.[39;49m[43mradviz[49m[43m([49m
[1;32m    313[0m [43m    [49m[43mframe[49m[38;5;241;43m=[39;49m[43mframe[49m[43m,[49m
[1;32m    314[0m [43m    [49m[43mclass_column[49m[38;5;241;43m=[39;49m[43mclass_column[49m[43m,[49m
[1;32m    315[0m [43m    [49m[43max[49m[38;5;241;43m=[39;49m[43max[49m[43m,[49m
[1;32m    316[0m [43m    [49m[43mcolor[49m[38;5;241;43m=[39;49m[43mcolor[49m[43m,[49m
[1;32m    317[0m [43m    [49m[43mcolormap[49m[38;5;241;43m=[39;49m[43mcolormap[49m[43m,[49m
[1;32m    318[0m [43m    [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwds[49m[43m,[49m
[1;32m    319[0m [43m[49m[43m)[49m

File [0;32m~/.local/lib/python3.10/site-packages/pandas/plotting/_matplotlib/misc.py:184[0m, in [0;36mradviz[0;34m(frame, class_column, ax, color, colormap, **kwds)[0m
[1;32m    181[0m     to_plot[kls][[38;5;241m1[39m][38;5;241m.[39mappend(y[[38;5;241m1[39m])
[1;32m    183[0m [38;5;28;01mfor[39;00m i, kls [38;5;129;01min[39;00m [38;5;28menumerate[39m(classes):
[0;32m--> 184[0m     [43max[49m[38;5;241;43m.[39;49m[43mscatter[49m[43m([49m
[1;32m    185[0m [43m        [49m[43mto_plot[49m[43m[[49m[43mkls[49m[43m][49m[43m[[49m[38;5;241;43m0[39;49m[43m][49m[43m,[49m
[1;32m    186[0m [43m        [49m[43mto_plot[49m[43m[[49m[43mkls[49m[43m][49m[43m[[49m[38;5;241;43m1[39;49m[43m][49m[43m,[49m
[1;32m    187[0m [43m        [49m[43mcolor[49m[38;5;241;43m=[39;49m[43mcolors[49m[43m[[49m[43mi[49m[43m][49m[43m,[49m
[1;32m    188[0m [43m        [49m[43mlabel[49m[38;5;241;43m=[39;49m[43mpprint_thing[49m[43m([49m[43mkls[49m[43m)[49m[43m,[49m
[1;32m    189[0m [43m        [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwds[49m[43m,[49m
[1;32m    190[0m [43m    [49m[43m)[49m
[1;32m    191[0m ax[38;5;241m.[39mlegend()
[1;32m    193[0m ax[38;5;241m.[39madd_patch(patches[38;5;241m.[39mCircle(([38;5;241m0.0[39m, [38;5;241m0.0[39m), radius[38;5;241m=[39m[38;5;241m1.0[39m, facecolor[38;5;241m=[39m[38;5;124m"[39m[38;5;124mnone[39m[38;5;124m"[39m))

File [0;32m~/.local/lib/python3.10/site-packages/matplotlib/__init__.py:1465[0m, in [0;36m_preprocess_data.<locals>.inner[0;34m(ax, data, *args, **kwargs)[0m
[1;32m   1462[0m [38;5;129m@functools[39m[38;5;241m.[39mwraps(func)
[1;32m   1463[0m [38;5;28;01mdef[39;00m [38;5;21minner[39m(ax, [38;5;241m*[39margs, data[38;5;241m=[39m[38;5;28;01mNone[39;00m, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[1;32m   1464[0m     [38;5;28;01mif[39;00m data [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[0;32m-> 1465[0m         [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[43max[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;28;43mmap[39;49m[43m([49m[43msanitize_sequence[49m[43m,[49m[43m [49m[43margs[49m[43m)[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m   1467[0m     bound [38;5;241m=[39m new_sig[38;5;241m.[39mbind(ax, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)
[1;32m   1468[0m     auto_label [38;5;241m=[39m (bound[38;5;241m.[39marguments[38;5;241m.[39mget(label_namer)
[1;32m   1469[0m                   [38;5;129;01mor[39;00m bound[38;5;241m.[39mkwargs[38;5;241m.[39mget(label_namer))

File [0;32m~/.local/lib/python3.10/site-packages/matplotlib/axes/_axes.py:4766[0m, in [0;36mAxes.scatter[0;34m(self, x, y, s, c, marker, cmap, norm, vmin, vmax, alpha, linewidths, edgecolors, plotnonfinite, **kwargs)[0m
[1;32m   4762[0m         keys_str [38;5;241m=[39m [38;5;124m"[39m[38;5;124m, [39m[38;5;124m"[39m[38;5;241m.[39mjoin([38;5;124mf[39m[38;5;124m"[39m[38;5;124m'[39m[38;5;132;01m{[39;00mk[38;5;132;01m}[39;00m[38;5;124m'[39m[38;5;124m"[39m [38;5;28;01mfor[39;00m k [38;5;129;01min[39;00m extra_keys)
[1;32m   4763[0m         _api[38;5;241m.[39mwarn_external(
[1;32m   4764[0m             [38;5;124m"[39m[38;5;124mNo data for colormapping provided via [39m[38;5;124m'[39m[38;5;124mc[39m[38;5;124m'[39m[38;5;124m. [39m[38;5;124m"[39m
[1;32m   4765[0m             [38;5;124mf[39m[38;5;124m"[39m[38;5;124mParameters [39m[38;5;132;01m{[39;00mkeys_str[38;5;132;01m}[39;00m[38;5;124m will be ignored[39m[38;5;124m"[39m)
[0;32m-> 4766[0m [43mcollection[49m[38;5;241;43m.[39;49m[43m_internal_update[49m[43m([49m[43mkwargs[49m[43m)[49m
[1;32m   4768[0m [38;5;66;03m# Classic mode only:[39;00m
[1;32m   4769[0m [38;5;66;03m# ensure there are margins to allow for the[39;00m
[1;32m   4770[0m [38;5;66;03m# finite size of the symbols.  In v2.x, margins[39;00m
[1;32m   4771[0m [38;5;66;03m# are present by default, so we disable this[39;00m
[1;32m   4772[0m [38;5;66;03m# scatter-specific override.[39;00m
[1;32m   4773[0m [38;5;28;01mif[39;00m mpl[38;5;241m.[39mrcParams[[38;5;124m'[39m[38;5;124m_internal.classic_mode[39m[38;5;124m'[39m]:

File [0;32m~/.local/lib/python3.10/site-packages/matplotlib/artist.py:1219[0m, in [0;36mArtist._internal_update[0;34m(self, kwargs)[0m
[1;32m   1212[0m [38;5;28;01mdef[39;00m [38;5;21m_internal_update[39m([38;5;28mself[39m, kwargs):
[1;32m   1213[0m [38;5;250m    [39m[38;5;124;03m"""[39;00m
[1;32m   1214[0m [38;5;124;03m    Update artist properties without prenormalizing them, but generating[39;00m
[1;32m   1215[0m [38;5;124;03m    errors as if calling `set`.[39;00m
[1;32m   1216[0m 
[1;32m   1217[0m [38;5;124;03m    The lack of prenormalization is to maintain backcompatibility.[39;00m
[1;32m   1218[0m [38;5;124;03m    """[39;00m
[0;32m-> 1219[0m     [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_update_props[49m[43m([49m
[1;32m   1220[0m [43m        [49m[43mkwargs[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;132;43;01m{cls.__name__}[39;49;00m[38;5;124;43m.set() got an unexpected keyword argument [39;49m[38;5;124;43m"[39;49m
[1;32m   1221[0m [43m        [49m[38;5;124;43m"[39;49m[38;5;132;43;01m{prop_name!r}[39;49;00m[38;5;124;43m"[39;49m[43m)[49m

File [0;32m~/.local/lib/python3.10/site-packages/matplotlib/artist.py:1193[0m, in [0;36mArtist._update_props[0;34m(self, props, errfmt)[0m
[1;32m   1191[0m             func [38;5;241m=[39m [38;5;28mgetattr[39m([38;5;28mself[39m, [38;5;124mf[39m[38;5;124m"[39m[38;5;124mset_[39m[38;5;132;01m{[39;00mk[38;5;132;01m}[39;00m[38;5;124m"[39m, [38;5;28;01mNone[39;00m)
[1;32m   1192[0m             [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mcallable[39m(func):
[0;32m-> 1193[0m                 [38;5;28;01mraise[39;00m [38;5;167;01mAttributeError[39;00m(
[1;32m   1194[0m                     errfmt[38;5;241m.[39mformat([38;5;28mcls[39m[38;5;241m=[39m[38;5;28mtype[39m([38;5;28mself[39m), prop_name[38;5;241m=[39mk))
[1;32m   1195[0m             ret[38;5;241m.[39mappend(func(v))
[1;32m   1196[0m [38;5;28;01mif[39;00m ret:

[0;31mAttributeError[0m: PathCollection.set() got an unexpected keyword argument 'legend'

