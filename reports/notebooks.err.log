Traceback (most recent call last):
  File "/home/brittny/.local/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/brittny/.local/lib/python3.10/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/brittny/.local/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/home/brittny/.local/lib/python3.10/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/home/brittny/.local/lib/python3.10/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/brittny/.local/lib/python3.10/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import matplotlib.pyplot as plt
import pandas as pd
from pandas.plotting import radviz
df = pd.read_csv('cleaned.csv')
df = df.drop('id', axis=1)
df = df.drop('Other Identification', axis=1)
df = df.drop('Other Interest', axis=1)
plt.figure()
rslt_df = df[df['geo'] in ['Toronto, Canada',  'Ottawa, Canada']]

radviz(rslt_df, "geo")
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m/tmp/ipykernel_455118/2982026475.py[0m in [0;36m?[0;34m()[0m
[1;32m      5[0m [0mdf[0m [0;34m=[0m [0mdf[0m[0;34m.[0m[0mdrop[0m[0;34m([0m[0;34m'id'[0m[0;34m,[0m [0maxis[0m[0;34m=[0m[0;36m1[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      6[0m [0mdf[0m [0;34m=[0m [0mdf[0m[0;34m.[0m[0mdrop[0m[0;34m([0m[0;34m'Other Identification'[0m[0;34m,[0m [0maxis[0m[0;34m=[0m[0;36m1[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      7[0m [0mdf[0m [0;34m=[0m [0mdf[0m[0;34m.[0m[0mdrop[0m[0;34m([0m[0;34m'Other Interest'[0m[0;34m,[0m [0maxis[0m[0;34m=[0m[0;36m1[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      8[0m [0mplt[0m[0;34m.[0m[0mfigure[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m----> 9[0;31m [0mrslt_df[0m [0;34m=[0m [0mdf[0m[0;34m[[0m[0mdf[0m[0;34m[[0m[0;34m'geo'[0m[0;34m][0m [0;32min[0m [0;34m[[0m[0;34m'Toronto, Canada'[0m[0;34m,[0m  [0;34m'Ottawa, Canada'[0m[0;34m][0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     10[0m [0;34m[0m[0m
[1;32m     11[0m [0mradviz[0m[0;34m([0m[0mrslt_df[0m[0;34m,[0m [0;34m"geo"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/.local/lib/python3.10/site-packages/pandas/core/generic.py[0m in [0;36m?[0;34m(self)[0m
[1;32m   1517[0m     [0;34m@[0m[0mfinal[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1518[0m     [0;32mdef[0m [0m__nonzero__[0m[0;34m([0m[0mself[0m[0;34m)[0m [0;34m->[0m [0mNoReturn[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1519[0;31m         raise ValueError(
[0m[1;32m   1520[0m             [0;34mf"The truth value of a {type(self).__name__} is ambiguous. "[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1521[0m             [0;34m"Use a.empty, a.bool(), a.item(), a.any() or a.all()."[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1522[0m         )

[0;31mValueError[0m: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().

